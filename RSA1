def egcd(a, b):
    if a==0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m



p = 1680613444652105838344133706142211604381500993652031705380909307238347587888162431490921255465344239

q = 2143532995881162829855694296384103840144300960388531553947710050014176459461784664429637761367242287

n = 3602450371933289259505962604145447016470548549258656444530507295743634900760590331224983030986486335634904637782191519414445863554514528228600605091454332193510267277649425644596949532213146572634593
e = 65537
c = 1921902980210977295270519710634709719343372281625129194637780159651252905527903923450045434239794433327822136581724693103107581315471305119544244907185643235873825200596556268483571243342863955690176

fi = (p-1)*(q-1)
d = modinv(e, fi)
print ("%x" % pow(c, d, n)).decode("hex")
